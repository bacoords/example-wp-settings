{"version":3,"file":"index.js","mappings":"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CA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEjDA;UACA;UACA;UACA;UACA","sources":["webpack://example-wp-settings/./src/components/Panel.js","webpack://example-wp-settings/./src/components/SettingsPage.js","webpack://example-wp-settings/./src/index.js","webpack://example-wp-settings/./src/style.scss?75bd","webpack://example-wp-settings/external window \"React\"","webpack://example-wp-settings/external window [\"wp\",\"components\"]","webpack://example-wp-settings/external window [\"wp\",\"coreData\"]","webpack://example-wp-settings/external window [\"wp\",\"data\"]","webpack://example-wp-settings/external window [\"wp\",\"element\"]","webpack://example-wp-settings/external window [\"wp\",\"i18n\"]","webpack://example-wp-settings/webpack/bootstrap","webpack://example-wp-settings/webpack/runtime/chunk loaded","webpack://example-wp-settings/webpack/runtime/compat get default export","webpack://example-wp-settings/webpack/runtime/define property getters","webpack://example-wp-settings/webpack/runtime/hasOwnProperty shorthand","webpack://example-wp-settings/webpack/runtime/make namespace object","webpack://example-wp-settings/webpack/runtime/jsonp chunk loading","webpack://example-wp-settings/webpack/before-startup","webpack://example-wp-settings/webpack/startup","webpack://example-wp-settings/webpack/after-startup"],"sourcesContent":["import { __ } from '@wordpress/i18n';\nimport { Flex, FlexItem, TextControl } from '@wordpress/components';\n\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\nfunction Panel() {\n\t// Get the settings from the store.\n\tconst { record: settings, hasResolved } = useSelect( ( select ) => {\n\t\treturn {\n\t\t\trecord: select( coreStore ).getEditedEntityRecord( 'root', 'site' ),\n\t\t\thasResolved: select( coreStore ).hasFinishedResolution(\n\t\t\t\t'getEditedEntityRecord',\n\t\t\t\t[ 'root', 'site' ]\n\t\t\t),\n\t\t};\n\t} );\n\n\t// We'll use these functions to save the settings to the store.\n\tconst { editEntityRecord } = useDispatch( coreStore );\n\n\tif ( ! hasResolved ) {\n\t\treturn null;\n\t}\n\n\t// This will save settings the settings to the local state only.\n\tconst updateOptions = ( key, value ) => {\n\t\teditEntityRecord( 'root', 'site', undefined, {\n\t\t\twpdev_account_settings: {\n\t\t\t\t...settings.wpdev_account_settings,\n\t\t\t\t[ key ]: value,\n\t\t\t},\n\t\t} );\n\t};\n\n\treturn (\n\t\t<Flex\n\t\t\tdirection=\"column\"\n\t\t\tgap=\"4\"\n\t\t\tclassName=\"example-wp-settings-field-group\"\n\t\t>\n\t\t\t<FlexItem>\n\t\t\t\t<TextControl\n\t\t\t\t\tlabel={ __( 'Acount Number' ) }\n\t\t\t\t\tvalue={ settings.wpdev_account_settings?.account_number }\n\t\t\t\t\ttype={ 'text' }\n\t\t\t\t\tonChange={ ( value ) => {\n\t\t\t\t\t\tupdateOptions( 'account_number', value );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t</FlexItem>\n\t\t\t<FlexItem>\n\t\t\t\t<TextControl\n\t\t\t\t\tlabel={ __( 'Account Key' ) }\n\t\t\t\t\tvalue={ settings.wpdev_account_settings?.account_key }\n\t\t\t\t\ttype={ 'password' }\n\t\t\t\t\tonChange={ ( value ) => {\n\t\t\t\t\t\tupdateOptions( 'account_key', value );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t</FlexItem>\n\t\t</Flex>\n\t);\n}\n\nexport default Panel;\n","import { __ } from '@wordpress/i18n';\nimport { useState, useEffect } from '@wordpress/element';\nimport {\n\tCard,\n\tCardBody,\n\tCardDivider,\n\tFlex,\n\tFlexItem,\n\tButton,\n\tSnackbar,\n\tTabPanel,\n} from '@wordpress/components';\n\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\nimport Panel from './Panel';\n\nfunction SettingsPage() {\n\t// Get the settings from the store.\n\tconst { record: settings, hasResolved } = useSelect( ( select ) => {\n\t\treturn {\n\t\t\trecord: select( coreStore ).getEditedEntityRecord( 'root', 'site' ),\n\t\t\thasResolved: select( coreStore ).hasFinishedResolution(\n\t\t\t\t'getEditedEntityRecord',\n\t\t\t\t[ 'root', 'site' ]\n\t\t\t),\n\t\t};\n\t} );\n\n\t// We'll use these functions to save the settings to the store.\n\tconst { saveEntityRecord } = useDispatch( coreStore );\n\n\t// State to show a success message when the settings are saved.\n\tconst [ success, setSuccess ] = useState( false );\n\n\t// State to keep track of which tab is active.\n\tconst [ activeTab, setActiveTab ] = useState( 'panel' );\n\n\t// If the settings haven't been loaded yet, we'll return null.\n\t// This needs to happen after all the hooks are called.\n\tif ( ! hasResolved ) {\n\t\treturn null;\n\t}\n\t// In the block editor, saving to the database happens automatically when you publish or update a post.\n\t// In the our settings page, you would need to add a separate button to save the settings.\n\tconst saveOptions = ( event ) => {\n\t\tevent.preventDefault();\n\t\tsaveEntityRecord( 'root', 'site', {\n\t\t\twpdev_account_settings: settings.wpdev_account_settings,\n\t\t} ).then( ( response ) => {\n\t\t\tsetSuccess( true );\n\t\t\tconsole.log( response );\n\t\t} );\n\t};\n\n\treturn (\n\t\t<form className=\"example-wp-settings\" onSubmit={ saveOptions }>\n\t\t\t<Card>\n\t\t\t\t<CardBody>\n\t\t\t\t\t<h1>{ __( 'Example WP Settings Settings' ) }</h1>\n\t\t\t\t\t<TabPanel\n\t\t\t\t\t\tclassName=\"example-wp-settings-tab-panel\"\n\t\t\t\t\t\tonSelect={ ( tabName ) => {\n\t\t\t\t\t\t\tsetActiveTab( tabName );\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tinitialTabName={ activeTab }\n\t\t\t\t\t\ttabs={ [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: 'panel',\n\t\t\t\t\t\t\t\ttitle: 'Example Panel',\n\t\t\t\t\t\t\t\tcontent: <Panel />,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t] }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ ( tab ) => <>{ tab.content }</> }\n\t\t\t\t\t</TabPanel>\n\t\t\t\t</CardBody>\n\t\t\t\t<CardDivider />\n\t\t\t\t<CardBody>\n\t\t\t\t\t<Flex>\n\t\t\t\t\t\t<FlexItem>\n\t\t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\">\n\t\t\t\t\t\t\t\tSave Changes\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</FlexItem>\n\t\t\t\t\t\t<FlexItem>\n\t\t\t\t\t\t\t{ success && (\n\t\t\t\t\t\t\t\t<Snackbar\n\t\t\t\t\t\t\t\t\tstatus={ 'success' }\n\t\t\t\t\t\t\t\t\tonDismiss={ function noRefCheck() {\n\t\t\t\t\t\t\t\t\t\tsetSuccess( false );\n\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\tonRemove={ function noRefCheck() {} }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSaved\n\t\t\t\t\t\t\t\t</Snackbar>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</FlexItem>\n\t\t\t\t\t</Flex>\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t</form>\n\t);\n}\n\nexport default SettingsPage;\n","import { createRoot } from '@wordpress/element';\nimport SettingsPage from './components/SettingsPage';\n\nimport './style.scss';\n\nlet root = createRoot( document.getElementById( 'root' ) );\nroot.render( <SettingsPage /> );\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"index\": 0,\n\t\"./style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunkexample_wp_settings\"] = globalThis[\"webpackChunkexample_wp_settings\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"./style-index\"], () => (__webpack_require__(\"./src/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["__","Flex","FlexItem","TextControl","useDispatch","useSelect","store","coreStore","Panel","record","settings","hasResolved","select","getEditedEntityRecord","hasFinishedResolution","editEntityRecord","updateOptions","key","value","undefined","wpdev_account_settings","createElement","direction","gap","className","label","account_number","type","onChange","account_key","useState","useEffect","Card","CardBody","CardDivider","Button","Snackbar","TabPanel","SettingsPage","saveEntityRecord","success","setSuccess","activeTab","setActiveTab","saveOptions","event","preventDefault","then","response","console","log","onSubmit","onSelect","tabName","initialTabName","tabs","name","title","content","tab","Fragment","variant","status","onDismiss","noRefCheck","onRemove","createRoot","root","document","getElementById","render"],"sourceRoot":""}